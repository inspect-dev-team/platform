<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.enterprise.LicenseDao">

    <resultMap type="com.platform.entity.enterprise.LicenseEntity" id="licenseMap">
        <result property="id" column="id"/>
        <result property="licenseTypeId" column="license_type_id"/>
        <result property="licenseType" column="license_type"/>
        <result property="licenseName" column="license_name"/>
        <result property="number" column="number"/>
        <result property="expireDate" column="expire_date"/>
        <result property="url" column="url"/>
        <result property="createTime" column="create_time"/>
        <result property="creator" column="creator"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.enterprise.LicenseEntity">
		select
			`id`,
			`license_type_id`,
			`license_type`,
			`license_name`,
			`number`,
			`expire_date`,
			`url`,
			`create_time`,
			`creator`
		from license
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.enterprise.LicenseVo">
		select m.id,m.license_type_id as licenseTypeId,s.license_type AS licenseType, m.license_name as licenseName,m.number,m.expire_date as expireDate,m.creator
		from license m left join license_type s on s.id = m. license_type_id
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND m.license_name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="selectList" resultType="com.platform.entity.enterprise.LicenseVo">
		select m.id,m.license_type_id as licenseTypeId,s.license_type AS licenseType, m.license_name as licenseName,m.number,m.expire_date as expireDate,m.creator
		from license m left join license_type s on s.id = m. license_type_id
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND license_name LIKE concat('%',#{name},'%')
		</if>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(1) from license
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND license_name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.enterprise.LicenseEntity" useGeneratedKeys="true" keyProperty="id">
		insert into license(
			`license_type_id`,
			`license_type`,
			`license_name`,
			`number`,
			`expire_date`,
			`url`,
			`create_time`,
			`creator`)
		values(
			#{licenseTypeId},
			#{licenseType},
			#{licenseName},
			#{number},
			#{expireDate},
			#{url},
			#{createTime},
			#{creator})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.enterprise.LicenseEntity">
		update license 
		<set>
			<if test="licenseTypeId != null">`license_type_id` = #{licenseTypeId}, </if>
			<if test="licenseType != null">`license_type_id` = #{licenseType}, </if>
			<if test="licenseName != null">`license_name` = #{licenseName}, </if>
			<if test="number != null">`number` = #{number}, </if>
			<if test="expireDate != null">`expire_date` = #{expireDate}, </if>
			<if test="url != null">`url` = #{url}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="creator != null">`creator` = #{creator}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from license where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from license where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>