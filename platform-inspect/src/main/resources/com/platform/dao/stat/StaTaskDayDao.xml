<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.stat.StaTaskDayDao">

    <resultMap type="com.platform.entity.stat.StaTaskDayEntity" id="staTaskDayMap">
        <result property="id" column="id"/>
        <result property="statDate" column="stat_date"/>
		<result property="provinceId" column="province_id"/>
		<result property="cityId" column="city_id"/>
		<result property="districtId" column="district_id"/>
        <result property="pendingNum" column="pending_num"/>
        <result property="executingNum" column="executing_num"/>
        <result property="finishNum" column="finish_num"/>
        <result property="timeoutNum" column="timeout_num"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.stat.StaTaskDayEntity">
		select
			`id`,
			`stat_date`,
			province_id,
			city_id,
			district_id,
			`pending_num`,
			`executing_num`,
			`finish_num`,
			`timeout_num`
		from sta_task_day
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.stat.StaTaskDayEntity">
		select
    		`id`,
    		`stat_date`,
		province_id,
		city_id,
		district_id,
    		`pending_num`,
    		`executing_num`,
    		`finish_num`,
    		`timeout_num`
		from sta_task_day
		WHERE 1=1
		<if test="startTime != null and endTime != null">
			<![CDATA[	AND #{startTime} <= `stat_date` AND  `stat_date` <= #{endTime} ]]>
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sta_task_day
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.stat.StaTaskDayEntity" useGeneratedKeys="true" keyProperty="id">
		insert into sta_task_day(
			`stat_date`,
			province_id,
			city_id,
			district_id,
			`pending_num`,
			`executing_num`,
			`finish_num`,
			`timeout_num`)
		values(
			#{statDate},
			#{provinceId},
			#{cityId},
			#{districtId},
			#{pendingNum},
			#{executingNum},
			#{finishNum},
			#{timeoutNum})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.stat.StaTaskDayEntity">
		update sta_task_day 
		<set>
			<if test="statDate != null">`stat_date` = #{statDate}, </if>
			<if test="statDate != null">`stat_date` = #{statDate}, </if>
			<if test="provinceId != null">`province_id` = #{provinceId}, </if>
			<if test="cityId != null">`city_id` = #{cityId}, </if>
			<if test="districtId != null">`district_id` = #{districtId}, </if>
			<if test="executingNum != null">`executing_num` = #{executingNum}, </if>
			<if test="finishNum != null">`finish_num` = #{finishNum}, </if>
			<if test="timeoutNum != null">`timeout_num` = #{timeoutNum}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from sta_task_day where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sta_task_day where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>