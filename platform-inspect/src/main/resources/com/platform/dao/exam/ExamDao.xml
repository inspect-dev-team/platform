<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.exam.ExamDao">

    <resultMap type="com.platform.entity.exam.ExamEntity" id="examMap">
        <result property="id" column="id"/>
        <result property="examName" column="exam_name"/>
        <result property="introduce" column="introduce"/>
        <result property="beginTime" column="begin_time"/>
        <result property="endTime" column="end_time"/>
        <result property="member" column="member"/>
        <result property="createTime" column="create_time"/>
        <result property="creator" column="creator"/>
		<result property="creatorId" column="creator_id"/>
        <result property="updateTime" column="update_time"/>
        <result property="updator" column="updator"/>
		<result property="updatorId" column="updator_id"/>
        <result property="enabled" column="enabled"/>
		<result property="totalScore" column="total_score"/>
		<result property="questionNum" column="question_num"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.exam.ExamEntity">
		select
			`id`,
			`exam_name`,
			`introduce`,
			`begin_time`,
			`end_time`,
			`member`,
			`create_time`,
			`creator`,
			`creator_id`,
			`update_time`,
			`updator`,
			`updator_id`,
			`total_score`,
			`question_num`,
			`enabled`
		from exam
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.exam.ExamEntity">
		select
    		`id`,
    		`exam_name`,
    		`introduce`,
    		`begin_time`,
    		`end_time`,
    		`member`,
    		`create_time`,
    		`creator`,
		`creator_id`,
    		`update_time`,
    		`updator`,
		`updator_id`,
			`total_score`,
			`question_num`,
    		`enabled`
		from exam
		WHERE 1=1 AND  `enabled` = 0
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from exam
		WHERE 1=1 AND  `enabled` = 0
		<if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.exam.ExamEntity" useGeneratedKeys="true" keyProperty="id">
		insert into exam(
			`exam_name`,
			`introduce`,
			`begin_time`,
			`end_time`,
			`member`,
			`create_time`,
			`creator`,
			`creator_id`,
			`update_time`,
			`updator`,
			`updator_id`,
			`total_score`,
			`question_num`,
			`enabled`)
		values(
			#{examName},
			#{introduce},
			#{beginTime},
			#{endTime},
			#{member},
			#{createTime},
			#{creator},
			#{creatorId},
			#{updateTime},
			#{updator},
			#{updatorId},
			#{totalScore},
			#{questionNum},
			#{enabled})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.exam.ExamEntity">
		update exam 
		<set>
			<if test="examName != null">`exam_name` = #{examName}, </if>
			<if test="introduce != null">`introduce` = #{introduce}, </if>
			<if test="beginTime != null">`begin_time` = #{beginTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime}, </if>
			<if test="member != null">`member` = #{member}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="creator != null">`creator` = #{creator}, </if>
			<if test="creatorId != null">`creator_id` = #{creatorId}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="updator != null">`updator` = #{updator}, </if>
			<if test="updatorId != null">`updator_id` = #{updatorId}, </if>
			<if test="totalScore != null">`total_score` = #{totalScore}, </if>
			<if test="questionNum != null">`question_num` = #{questionNum}, </if>
			<if test="enabled != null">`enabled` = #{enabled}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from exam where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from exam where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>