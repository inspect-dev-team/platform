<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.exam.ExamQuestionDao">

    <resultMap type="com.platform.entity.exam.ExamQuestionEntity" id="examQuestionMap">
        <result property="id" column="id"/>
        <result property="examId" column="exam_id"/>
        <result property="score" column="score"/>
        <result property="question" column="question"/>
        <result property="answer" column="answer"/>
        <result property="item" column="item"/>
        <result property="createTime" column="create_time"/>
        <result property="creator" column="creator"/>
		<result property="creatorId" column="creator_id"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.exam.ExamQuestionEntity">
		select
			`id`,
			`exam_id`,
			`score`,
			`question`,
			`answer`,
			`item`,
			`create_time`,
			`creator_id`,
			`creator`
		from exam_question
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.exam.ExamQuestionEntity">
		select
    		`id`,
    		`exam_id`,
    		`score`,
    		`question`,
    		`answer`,
    		`item`,
    		`create_time`,
		    `creator_id`,
    		`creator`
		from exam_question
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
		<if test="examId != null">
			AND exam_id = #{examId}
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from exam_question
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
		<if test="examId != null ">
			AND exam_id = #{examId}
		</if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.exam.ExamQuestionEntity" useGeneratedKeys="true" keyProperty="id">
		insert into exam_question(
			`exam_id`,
			`score`,
			`question`,
			`answer`,
			`item`,
			`create_time`,
			`creator_id`,
			`creator`)
		values(
			#{examId},
			#{score},
			#{question},
			#{answer},
			#{item},
			#{createTime},
			#{creatorId},
			#{creator})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.exam.ExamQuestionEntity">
		update exam_question 
		<set>
			<if test="examId != null">`exam_id` = #{examId}, </if>
			<if test="score != null">`score` = #{score}, </if>
			<if test="question != null">`question` = #{question}, </if>
			<if test="answer != null">`answer` = #{answer}, </if>
			<if test="item != null">`item` = #{item}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="creatorId != null">`creator_id` = #{creatorId}, </if>
			<if test="creator != null">`creator` = #{creator}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from exam_question where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from exam_question where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>