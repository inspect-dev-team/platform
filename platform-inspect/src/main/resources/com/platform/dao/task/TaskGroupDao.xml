<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.task.TaskGroupDao">

    <resultMap type="com.platform.entity.task.TaskGroupEntity" id="taskGroupMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="dataStatus" column="data_status"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.task.TaskGroupEntity">
		select
			`id`,
			`name`,
			`remark`,
			`create_time`,
			`update_time`,
			`data_status`
		from task_group
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.task.TaskGroupEntity">
		select
    		`id`,
    		`name`,
    		`remark`,
    		`create_time`,
    		`update_time`,
    		`data_status`
		from task_group
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryAllTaskGroup" resultType="com.platform.vo.SelectVo">
		select `id`,`name` from task_group where data_status=0
	</select>

	<!--查询所有任务组人员 -->
	<select id="queryAllTaskGroupMembers" resultType="com.platform.vo.SelectVo">
		select id,name from sys_user order by id where username != 'admin' or account!='admin'
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from task_group
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.task.TaskGroupEntity" useGeneratedKeys="true" keyProperty="id">
		insert into task_group(
			`name`,
			`remark`,
			`create_time`,
			`update_time`,
			`data_status`)
		values(
			#{name},
			#{remark},
			#{createTime},
			#{updateTime},
			#{dataStatus})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.task.TaskGroupEntity">
		update task_group 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="dataStatus != null">`data_status` = #{dataStatus}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from task_group where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from task_group where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<!-- -->
	<select id="selectTaskByTaskGroupId" parameterType="java.lang.Integer" resultType="com.platform.vo.SelectVo">
		SELECT t.id,t.name FROM task_group tg LEFT JOIN task t ON tg.id = t.task_group_id WHERE tg.id=#{id};
	</select>

	<!-- App接口 部分 -->
	<select id="selectTaskGroupSimple" resultType="com.platform.entity.task.vo.TaskVo">
		SELECT g.id AS taskGroupId,t.id AS taskId,g.name,t.start_time as startTime,m.updator_id as checkUserId,
		t.end_time as endTime,m.region_id as regionId,e.enterprise_name as enterpriseName,t.status
		FROM task_group g RIGHT JOIN task t ON t.task_group_id = g.id
		LEFT JOIN task_group_material gm ON gm.task_group_id = g.id
		LEFT JOIN material m ON m.id = gm.material_id
		LEFT JOIN enterprise e ON e.id = m.enterprise_id
		where 1=1
		<if test="status != null and status.trim() != '' and status==0">
			AND t.status in (0,1)
		</if>
		<if test="status != null and status.trim() != '' and status!=0">
			AND t.status =#{status}
		</if>
		<if test="userId != null">
			AND FIND_IN_SET(#{userId},g.user_ids)
		</if>
		GROUP BY g.id,t.id
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by g.id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="selectTaskGroupSimpleTotal" resultType="java.lang.Integer">
		SELECT count(1)
		FROM
		(
			SELECT g.id AS taskGroupId,t.id AS taskId,g.name,t.start_time as startTime,t.end_time as endTime,m.region_id as regionId,e.enterprise_name as enterpriseName,t.status
			FROM task_group g RIGHT JOIN task t ON t.task_group_id = g.id
			LEFT JOIN task_group_material gm ON gm.task_group_id = g.id
			LEFT JOIN material m ON m.id = gm.material_id
			LEFT JOIN enterprise e ON e.id = m.enterprise_id
			where 1=1
			<if test="status != null and status.trim() != '' and status==0">
				AND t.status in (0,1)
			</if>
			<if test="status != null and status.trim() != '' and status!=0">
				AND t.status =#{status}
			</if>
			GROUP BY g.id,t.id
		) t
	</select>

	<!-- 统计各个任务组的进度 -->
	<select id="selectTaskGroupProcessRate" resultType="com.platform.entity.task.vo.TaskStatisticsVo">
		SELECT tg.id,COUNT(tg.id) AS total,
		COUNT(CASE material_status WHEN 1 THEN 1 END)  AS finish
		FROM task_group tg LEFT JOIN task t ON t.task_group_id=tg.id
		LEFT JOIN task_group_material tgm ON tgm.task_group_id =tg.id
		LEFT JOIN material m ON m.id = tgm.material_id
		WHERE tg.id=#{taskGroupId} AND t.id=#{taskId}
		<if test="status != null and status.trim() != '' and status==0">
			AND t.status IN (0,1)
		</if>
		<if test="status != null and status.trim() != '' and status!=0">
			AND t.status = #{status}
		</if>
		GROUP BY tg.id,t.id
	</select>

	<!-- 根据任务id查询任务下的物品种类 -->
	<select id="selectTaskGroupMaterialType" resultType="com.platform.entity.task.vo.TaskStatisticsVo">
		  SELECT mt.id,mt.name AS materialType,
				COUNT(m.id) AS total,
				COUNT(CASE material_status WHEN 1 THEN 1 END)  AS finish,
				COUNT(CASE material_status WHEN 2 THEN 1 END)  AS anomaly
				FROM task t LEFT JOIN task_group tg ON t.task_group_id = tg.id
				LEFT JOIN task_group_material gm ON gm.task_group_id = tg.id
				LEFT JOIN material m ON m.id = gm.material_id
				LEFT JOIN material_type mt ON mt.id = m.material_type_id
				WHERE tg.id=#{taskGroupId} AND t.id=#{taskId}
				GROUP BY tg.id,t.id,mt.id
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by mt.name
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="selectTaskGroupMaterialTypeTotal" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM (
			SELECT mt.id,mt.name AS materialType,COUNT(m.id) AS total,
					COUNT(CASE material_status WHEN 1 THEN 1 END)  AS finish,
					COUNT(CASE material_status WHEN 2 THEN 1 END)  AS anomaly
			FROM task t LEFT JOIN task_group tg ON t.task_group_id = tg.id
			LEFT JOIN task_group_material gm ON gm.task_group_id = tg.id
			LEFT JOIN material m ON m.id = gm.material_id
			LEFT JOIN material_type mt ON mt.id = m.material_type_id
			WHERE tg.id=#{taskGroupId} AND t.id=#{taskId}
			GROUP BY tg.id,t.id,mt.id
		) t
	</select>

	<!-- 根据任务id查询任务下的企业 -->
	<select id="selectTaskGroupRegion" resultType="com.platform.entity.task.vo.TaskStatisticsVo">
		SELECT r.id,r.name AS region,
		COUNT(m.id) AS total,
		COUNT(CASE material_status WHEN 1 THEN 1 END)  AS finish,
		COUNT(CASE material_status WHEN 2 THEN 1 END)  AS anomaly
		FROM task t LEFT JOIN task_group tg ON t.task_group_id = tg.id
		LEFT JOIN task_group_material gm ON gm.task_group_id = tg.id
		LEFT JOIN material m ON m.id = gm.material_id
		LEFT JOIN material_type mt ON mt.id = m.material_type_id
		LEFT JOIN sys_region r ON r.id = m.region_id
		WHERE tg.id=#{taskGroupId} AND t.id=#{taskId}
		GROUP BY tg.id,t.id,m.region_id
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by r.name
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="selectTaskGroupRegionTotal" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM (
				SELECT r.id,r.name AS region,COUNT(m.id) AS total,
				COUNT(CASE material_status WHEN 1 THEN 1 END)  AS finish,
				COUNT(CASE material_status WHEN 2 THEN 1 END)  AS anomaly
				FROM task t LEFT JOIN task_group tg ON t.task_group_id = tg.id
				LEFT JOIN task_group_material gm ON gm.task_group_id = tg.id
				LEFT JOIN material m ON m.id = gm.material_id
				LEFT JOIN material_type mt ON mt.id = m.material_type_id
				LEFT JOIN sys_region r ON r.id = m.region_id
				WHERE tg.id=#{taskGroupId} AND t.id=#{taskId}
				GROUP BY tg.id,t.id,m.region_id
		) t
	</select>

	<!-- 查询物品详情 -->
	<select id="selectMaterialDetails" resultType="com.platform.entity.task.vo.MaterialDetailsVo">
		SELECT m.id,mt.name,m.region_id AS regionId,m.material_status AS status
				FROM task t LEFT JOIN task_group tg ON t.task_group_id = tg.id
				LEFT JOIN task_group_material gm ON gm.task_group_id = tg.id
				LEFT JOIN material m ON m.id = gm.material_id
				LEFT JOIN material_type mt ON mt.id = m.material_type_id
				WHERE tg.id=#{taskGroupId} AND t.id=#{taskId} AND mt.id = #{id}
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by mt.name
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="selectMaterialDetailsTotal" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM task t LEFT JOIN task_group tg ON t.task_group_id = tg.id
		LEFT JOIN task_group_material gm ON gm.task_group_id = tg.id
		LEFT JOIN material m ON m.id = gm.material_id
		LEFT JOIN material_type mt ON mt.id = m.material_type_id
		WHERE tg.id=#{taskGroupId} AND t.id=#{taskId} AND mt.id = #{id}
	</select>


	<select id="selectTaskGroupRegionDetails" resultType="com.platform.entity.task.vo.MaterialDetailsVo">
		SELECT m.id,m.material_name AS name,m.region_id AS regionId,m.material_status AS status
		FROM task t LEFT JOIN task_group tg ON t.task_group_id = tg.id
		LEFT JOIN task_group_material gm ON gm.task_group_id = tg.id
		LEFT JOIN material m ON m.id = gm.material_id
		LEFT JOIN material_type mt ON mt.id = m.material_type_id
		LEFT JOIN sys_region r ON r.id = m.region_id
		WHERE tg.id=#{taskGroupId} AND t.id=#{taskId} AND r.id=#{id}
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by m.material_name
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="selectTaskGroupRegionDetailsTotal" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM task t LEFT JOIN task_group tg ON t.task_group_id = tg.id
		LEFT JOIN task_group_material gm ON gm.task_group_id = tg.id
		LEFT JOIN material m ON m.id = gm.material_id
		LEFT JOIN material_type mt ON mt.id = m.material_type_id
		LEFT JOIN sys_region r ON r.id = m.region_id
		WHERE tg.id=#{taskGroupId} AND t.id=#{taskId} AND r.id = #{id}
	</select>
</mapper>