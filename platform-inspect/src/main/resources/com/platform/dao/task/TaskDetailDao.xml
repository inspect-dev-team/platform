<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.task.TaskDetailDao">

    <resultMap type="com.platform.entity.task.TaskDetailEntity" id="taskDetailMap">
        <result property="id" column="id"/>
        <result property="taskId" column="task_id"/>
		<result property="taskGroupId" column="task_group_id"/>
		<result property="enterpriseId" column="enterprise_id"/>
        <result property="status" column="status"/>
        <result property="delayReason" column="delay_reason"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
		<result property="updateTime" column="update_time"/>
		<result property="regionId" column="region_id"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.task.TaskDetailEntity">
		select
			`id`,
			task_group_id,
			`task_id`,
			`status`,
			`delay_reason`,
			`start_time`,
			`update_time`,
			 region_id,
			 enterprise_id,
			`end_time`
		from task_detail
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.task.TaskDetailEntity">
		select
    		`id`,
		     task_group_id,
    		`task_id`,
    		`status`,
    		`delay_reason`,
    		`start_time`,
		    `update_time`,
		     region_id,
		     enterprise_id,
    		`end_time`
		from task_detail
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from task_detail
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>

    <!-- 查询任务详情信息 -->
	<select id="selectTaskDetailList" resultType="com.platform.entity.task.vo.TaskDetailVo">
		SELECT
			d.id,
			t.`name`,
			t.remark,
			t.task_group_id AS taskGroupId,
		    t.`user_ids` AS  userIds,
			g.`name` AS taskGroupName,
			e.enterprise_name AS enterpriseName,
			r.`name` AS regionName,
			d.`status`,
			d.delay_reason AS delayReason,
			d.start_time AS startTime,
			d.end_time AS endTime,
			o.inspect_time AS inspectTime
		FROM
		  task_detail AS d
		LEFT JOIN task AS t ON d.task_id = t.id
		LEFT JOIN task_group AS g ON t.task_group_id  = g.id
		LEFT JOIN enterprise AS e ON e.id = t.enterprise_id
		LEFT JOIN sys_region AS r ON r.id = t.region_id
		LEFT JOIN (
			SELECT
			tmp.task_detail_id,
			tmp.inspect_time
			FROM (
				SELECT
				task_detail_id,
				inspect_time
				FROM inspect_order
				ORDER BY inspect_time DESC
		    ) AS tmp
		    GROUP BY tmp.task_detail_id
		) AS o ON d.id = o.task_detail_id

		<where>
			<if test="name != null and name.trim() != ''">
				AND t.`name` LIKE concat('%',#{name},'%')
			</if>
			<if test="regionName != null and regionName.trim() != ''">
				AND r.`name` LIKE concat('%',#{regionName},'%')
			</if>
			<if test="enterpriseName != null and enterpriseName.trim() != ''">
				AND e.enterprise_name LIKE concat('%',#{enterpriseName},'%')
			</if>
			<if test="regionId != null">
				AND t.region_id = #{regionId}
			</if>
			<if test="enterpriseId != null">
				AND t.enterprise_id = #{enterpriseId}
			</if>
			<if test="taskGroupId != null and taskGroupId.trim() != ''">
				AND t.`task_group_id` = #{taskGroupId}
			</if>
			<if test="status != null and status.trim() != ''">
				AND d.`status` = #{status}
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>


	<select id="selectTaskDetailToatal" resultType="int">
		SELECT
		   COUNT(*)
		FROM
		task_detail AS d
		LEFT JOIN task AS t ON d.task_id = t.id
		LEFT JOIN task_group AS g ON t.task_group_id  = g.id
		LEFT JOIN enterprise AS e ON e.id = t.enterprise_id
		LEFT JOIN sys_region AS r ON r.id = t.region_id
		LEFT JOIN (
		SELECT
		tmp.task_detail_id,
		tmp.inspect_time
		FROM (
		SELECT
		task_detail_id,
		inspect_time
		FROM inspect_order
		ORDER BY inspect_time DESC
		) AS tmp
		GROUP BY tmp.task_detail_id
		) AS o ON d.id = o.task_detail_id

		<where>
			<if test="name != null and name.trim() != ''">
				AND t.`name` LIKE concat('%',#{name},'%')
			</if>
			<if test="regionName != null and regionName.trim() != ''">
				AND r.`name` LIKE concat('%',#{regionName},'%')
			</if>
			<if test="enterpriseName != null and enterpriseName.trim() != ''">
				AND e.enterprise_name LIKE concat('%',#{enterpriseName},'%')
			</if>
			<if test="regionId != null">
				AND t.region_id = #{regionId}
			</if>
			<if test="enterpriseId != null">
				AND t.enterprise_id = #{enterpriseId}
			</if>
			<if test="taskGroupId != null and taskGroupId.trim() != ''">
				AND t.`task_group_id` = #{taskGroupId}
			</if>
			<if test="status != null and status.trim() != ''">
				AND d.`status` = #{status}
			</if>
		</where>
	</select>

	<!-- 任务统计 -->
	<select id="statTask" resultType="com.platform.entity.dto.StatDto">
		SELECT
		region_id AS  regionId,
		`status` AS `status`,
		COUNT(*) AS num
		FROM
		task_detail
		WHERE 1 = 1
		<if test="status != null">
			AND status =#{status}
		</if>
		<if test="startTime != null and endTime != null">
			<![CDATA[	AND #{startTime} <= `start_time` AND  `end_time`<= #{endTime}  ]]>
		</if>
		<if test="regionIdList != null">
			AND region_id IN
			<foreach collection="regionIdList" item="regionId" index="index" open="(" close=")" separator=",">
				#{regionId}
			</foreach>
		</if>
		<if test="enterpriseId != null"> AND  `enterprise_id` = #{enterpriseId} </if>
		GROUP BY  region_id,`status`
	</select>

	<!-- 大任务统计 -->
	<select id="statIntegratedTask" resultType="com.platform.entity.task.vo.TaskRelVo">
		SELECT
		d.region_id,
		sr.name,
		CONCAT_WS("/",COUNT(CASE
		WHEN d.`status` = 2 THEN d.`status`
		END) ,COUNT(*)) AS info
		FROM
		task_detail AS d
		LEFT JOIN task AS t ON d.task_id = t.id
		INNER JOIN task_rel AS r ON r.task_id = t.id
		LEFT JOIN sys_region AS sr ON d.region_id = sr.id
		<where>
			<if test="name != null and name.trim() != ''">
				AND sr.`name` LIKE concat('%',#{name},'%')
			</if>
			<if test="itId != null">
			  AND  r.it_id = #{itId}
			</if>
			<if test="enterpriseId != null">
				AND  t.`enterprise_id` = #{enterpriseId}
			</if>
		</where>
		GROUP BY d.region_id
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="statIntegratedTaskTotal" resultType="int">
		SELECT
		  COUNT (*)
		FROM
		task_detail AS d
		LEFT JOIN task AS t ON d.task_id = t.id
		INNER JOIN task_rel AS r ON r.task_id = t.id
		LEFT JOIN sys_region AS sr ON d.region_id = sr.id
		<where>
			<if test="name != null and name.trim() != ''">
				AND sr.`name` LIKE concat('%',#{name},'%')
			</if>
			<if test="itId != null">
				AND  r.it_id = #{itId}
			</if>
			<if test="enterpriseId != null">
				AND  t.`enterprise_id` = #{enterpriseId}
			</if>
		</where>
		GROUP BY d.region_id
	</select>


	<!--统计具体任务执行情况-->
	<select id="statTaskDetail" resultType="com.platform.entity.task.vo.TaskDetailStatVo">
		SELECT
		   tp.`name`,
		   mt.material_type_id AS materialTypeId,
		   CONCAT_WS('/',mt.num,CASE WHEN (t.exceptNum IS NULL OR t.nomarlNum IS NULL) THEN 0 ELSE t.exceptNum + t.nomarlNum END) AS progress,
		   CASE WHEN (t.exceptNum IS NULL ) THEN 0 ELSE t.exceptNum END AS exceptNum,
		   CASE WHEN (t.nomarlNum IS NULL ) THEN 0 ELSE t.nomarlNum END AS nomarlNum
		FROM
			(
				SELECT
					m.material_type_id,
					COUNT(*) AS num
				FROM
					task_group_material AS g
				LEFT JOIN material AS m ON g.material_id = m.id
				WHERE
					task_group_id = #{taskGroupId}
				GROUP BY
					m.material_type_id
			) AS mt
		LEFT JOIN (
			SELECT
				o.material_type_id,
				COUNT(
					CASE
					WHEN o.inspect_status = 0 THEN o.inspect_status
					END
				) AS nomarlNum,
				COUNT(
					CASE
					WHEN o.inspect_status = 1 THEN
						o.inspect_status
					END
				) AS exceptNum
			FROM
				inspect_order AS o
			WHERE
				o.task_detail_id = #{taskDetailId}
			GROUP BY
				o.material_type_id
		) AS t ON mt.material_type_id = t.material_type_id
		LEFT JOIN material_type AS tp ON mt.material_type_id = tp.id
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>


	<select id="statTaskDetailTotal" resultType="int">
		SELECT
		  COUNT(*)
		FROM
			(
				SELECT
					m.material_type_id,
					COUNT(*) AS num
				FROM
					task_group_material AS g
				LEFT JOIN material AS m ON g.material_id = m.id
				WHERE
					task_group_id = #{taskGroupId}
				GROUP BY
					m.material_type_id
			) AS mt
		LEFT JOIN (
			SELECT
				o.material_type_id,
				COUNT(
					CASE
					WHEN o.inspect_status = 0 THEN o.inspect_status
					END
				) AS nomarlNum,
				COUNT(
					CASE
					WHEN o.inspect_status = 1 THEN
						o.inspect_status
					END
				) AS exceptNum
			FROM
				inspect_order AS o
			WHERE
				o.task_detail_id = #{taskDetailId}
			GROUP BY
				o.material_type_id
		) AS t ON mt.material_type_id = t.material_type_id
		LEFT JOIN material_type AS tp ON mt.material_type_id = tp.id

	</select>
	 
	<insert id="save" parameterType="com.platform.entity.task.TaskDetailEntity" useGeneratedKeys="true" keyProperty="id">
		insert into task_detail(
			`task_id`,
			task_group_id,
			`status`,
			`delay_reason`,
			`start_time`,
			`update_time`,
			`end_time`,
			 enterprise_id,
		     region_id)
		values(
			#{taskId},
			#{taskGroupId},
			#{status},
			#{delayReason},
			#{startTime},
			#{updateTime},
			#{endTime},
			#{enterpriseId},
			#{regionId})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.task.TaskDetailEntity">
		update task_detail 
		<set>
			<if test="taskId != null">`task_id` = #{taskId}, </if>
			<if test="taskGroupId != null">`task_group_id` = #{taskGroupId}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="regionId != null">`region_id` = #{regionId}, </if>
			<if test="enterpriseId != null">`enterprise_id` = #{enterpriseId}, </if>
			<if test="delayReason != null">`delay_reason` = #{delayReason}, </if>
			<if test="startTime != null">`start_time` = #{startTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime} </if>
		</set>
		where id = #{id}
	</update>

	<!-- 开启任务 -->
	<update id="startTask">
		UPDATE
		task_detail
		SET `status` = 1 , `update_time` = now()
		WHERE
		`status` = 0
		AND (TO_DAYS(NOW()) - TO_DAYS(start_time)) >= 0
	</update>

	<!-- 任务超时 -->
	<update id="taskTimeOut">
		UPDATE
		task_detail
		SET `status` = 3, `update_time` = now()
		WHERE
		`status` = 1
		AND (TO_DAYS(NOW()) - TO_DAYS(end_time)) >= 0
	</update>

	<!-- 同步任务状态 -->
	<update id="syncTask">
		UPDATE task AS t
		INNER JOIN (
			SELECT
				task_id,
				`status`
			FROM
				task_detail
			WHERE
				(
					TO_DAYS(NOW()) - TO_DAYS(update_time)
				) = 0
		) AS d ON t.id = d.task_id
		SET t.`status` = d.`status`
	</update>

	<delete id="delete">
		delete from task_detail where id = #{value}
	</delete>

	<delete id="deleteByTaskId">
		delete from task_detail where task_id = #{value}
	</delete>
	<delete id="deleteBatch">
		delete from task_detail where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>