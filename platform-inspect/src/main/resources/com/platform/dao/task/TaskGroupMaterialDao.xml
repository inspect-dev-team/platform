<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.task.TaskGroupMaterialDao">

    <resultMap type="com.platform.entity.task.TaskGroupMaterialEntity" id="taskGroupMaterialMap">
        <result property="id" column="id"/>
        <result property="taskGroupId" column="task_group_id"/>
        <result property="materialId" column="material_id"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.task.TaskGroupMaterialEntity">
		select
			`id`,
			`task_group_id`,
			`material_id`
		from task_group_material
		where id = #{id}
	</select>

	<select id="selectTaskGroupMaterialList" resultType="com.platform.entity.task.TaskGroupMaterialEntity">
		SELECT
		    r.id AS id,
			r.material_id AS materialId,
			r.task_group_id AS taskGroupId,
			g.`name` AS groupName,
			m.material_name AS materialName,
			m.qr_code AS qrCode,
			m.location AS location,
			m.material_status AS materialStatus,
			m.update_time AS updateTime,
			t.name AS materialTypeName
		FROM
		material AS m,
		material_type AS t,
		task_group_material AS r,
		task_group AS g
		WHERE
		m.id = r.material_id
		AND m.material_type_id = t.id
		AND r.task_group_id = g.id
		<if test="materialName != null and materialName.trim() != ''">
			AND m.material_name LIKE concat('%',#{materialName},'%')
		</if>
		<if test="taskGroupId != null and taskGroupId.trim() != ''">
			AND r.task_group_id = #{taskGroupId}
		</if>
		<if test="typeId != null and typeId.trim() != ''">
			AND t.id = #{typeId}
		</if>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="selectTaskGroupMaterialTotal" resultType="int">
		SELECT
	      COUNT(*)
		FROM
		material AS m,
		material_type AS t,
		task_group_material AS r,
		task_group AS g
		WHERE
		m.id = r.material_id
		AND m.material_type_id = t.id
		AND r.task_group_id = g.id
		<if test="materialName != null and materialName.trim() != ''">
			AND m.material_name LIKE concat('%',#{materialName},'%')
		</if>
		<if test="taskGroupId != null and taskGroupId.trim() != ''">
			AND r.task_group_id = #{taskGroupId}
		</if>
		<if test="typeId != null and typeId.trim() != ''">
			AND t.id = #{typeId}
		</if>
	</select>

	<select id="queryList" resultType="com.platform.entity.task.TaskGroupMaterialEntity">
		select
    		`id`,
    		`task_group_id`,
    		`material_id`
		from task_group_material
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from task_group_material
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.task.TaskGroupMaterialEntity" useGeneratedKeys="true" keyProperty="id">
		insert into task_group_material(
			`task_group_id`,
			`material_id`)
		values(
			#{taskGroupId},
			#{materialId})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.task.TaskGroupMaterialEntity">
		update task_group_material 
		<set>
			<if test="taskGroupId != null">`task_group_id` = #{taskGroupId}, </if>
			<if test="materialId != null">`material_id` = #{materialId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from task_group_material where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from task_group_material where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>