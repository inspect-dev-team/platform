<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.task.TaskDao">

    <resultMap type="com.platform.entity.task.TaskEntity" id="taskMap">
        <result property="id" column="id"/>
        <result property="taskGroupId" column="task_group_id"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="userIds" column="user_ids"/>
        <result property="userNames" column="user_names"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="schedule" column="schedule"/>
        <result property="scheduleCycle" column="schedule_cycle"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="dataStatus" column="data_status"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.task.TaskEntity">
		select
			`id`,
			`task_group_id`,
			`type`,
			`status`,
			`user_ids`,
			`user_names`,
			`start_time`,
			`end_time`,
			`schedule`,
			`schedule_cycle`,
			`create_time`,
			`update_time`,
			`data_status`
		from task
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.task.TaskEntity">
		select
    		`id`,
    		`task_group_id`,
    		`type`,
    		`status`,
    		`user_ids`,
    		`user_names`,
    		`start_time`,
    		`end_time`,
    		`schedule`,
    		`schedule_cycle`,
    		`create_time`,
    		`update_time`,
    		`data_status`
		from task
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from task
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.task.TaskEntity" useGeneratedKeys="true" keyProperty="id">
		insert into task(
			`task_group_id`,
			`type`,
			`status`,
			`user_ids`,
			`user_names`,
			`start_time`,
			`end_time`,
			`schedule`,
			`schedule_cycle`,
			`create_time`,
			`update_time`,
			`data_status`)
		values(
			#{taskGroupId},
			#{type},
			#{status},
			#{userIds},
			#{userNames},
			#{startTime},
			#{endTime},
			#{schedule},
			#{scheduleCycle},
			#{createTime},
			#{updateTime},
			#{dataStatus})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.task.TaskEntity">
		update task 
		<set>
			<if test="taskGroupId != null">`task_group_id` = #{taskGroupId}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="userIds != null">`user_ids` = #{userIds}, </if>
			<if test="userNames != null">`user_names` = #{userNames}, </if>
			<if test="startTime != null">`start_time` = #{startTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime}, </if>
			<if test="schedule != null">`schedule` = #{schedule}, </if>
			<if test="scheduleCycle != null">`schedule_cycle` = #{scheduleCycle}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="dataStatus != null">`data_status` = #{dataStatus}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from task where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from task where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>