<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.task.TaskDao">

    <resultMap type="com.platform.entity.task.TaskEntity" id="taskMap">
        <result property="id" column="id"/>
        <result property="taskGroupId" column="task_group_id"/>
        <result property="type" column="type"/>
		<result property="name" column="name"/>
		<result property="remark" column="remark"/>
        <result property="status" column="status"/>
        <result property="userIds" column="user_ids"/>
        <result property="userNames" column="user_names"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="schedule" column="schedule"/>
        <result property="scheduleCycle" column="schedule_cycle"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="dataStatus" column="data_status"/>
        <result property="delayReason" column="delay_reason"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.task.TaskEntity">
		select
			`id`,
			`name`,
			`remark`,
			`task_group_id`,
			`type`,
			`status`,
			`user_ids`,
			`user_names`,
			`start_time`,
			`end_time`,
			`schedule`,
			`schedule_cycle`,
			`create_time`,
			`update_time`,
			`data_status`,
			`delay_reason`
		from task
		where id = #{id}
	</select>
	<select id="selectTaskList" resultType="com.platform.entity.task.TaskEntity">
		select
			t.`id`,
			t.`name`,
			t.`remark`,
			t.`task_group_id`,
			t.`type`,
			t.`status`,
			t.`user_ids`,
			t.`user_names`,
			t.`start_time`,
			t.`end_time`,
			t.`schedule`,
			t.`schedule_cycle`,
			t.`create_time`,
			t.`update_time`,
			t.`data_status`,
			tg.`name` AS taskGroupName,
			`delay_reason` as delayReason
		from task AS t
		LEFT JOIN task_group AS tg ON t.task_group_id = tg.id
		WHERE 1=1 AND t.data_status = 0
		<if test="name != null and name.trim() != ''">
			AND t.name LIKE concat('%',#{name},'%')
		</if>
		<if test="taskGroupId != null and taskGroupId.trim() != ''">
			AND t.`task_group_id` = #{taskGroupId}
		</if>
		<if test="status != null and status.trim() != ''">
			AND t.`status` = #{status}
		</if>
		<if test="type != null  and type.trim() != ''">
			AND t.`type` = #{type}
		</if>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="selectTaskTotal" resultType="int">
		select COUNT(1)
		from task AS t
		LEFT JOIN task_group AS tg ON t.task_group_id = tg.id
		WHERE 1=1 AND t.data_status = 0
		<if test="name != null and name.trim() != ''">
			AND t.name LIKE concat('%',#{name},'%')
		</if>
		<if test="taskGroupId != null and taskGroupId.trim() != ''">
			AND t.`task_group_id` = #{taskGroupId}
		</if>
		<if test="status != null and status.trim() != ''">
			AND t.`status` = #{status}
		</if>
		<if test="type != null  and type.trim() != ''">
			AND t.`type` = #{type}
		</if>
	</select>

	<select id="queryList" resultType="com.platform.entity.task.TaskEntity">
		select `id`, `name`, `remark`,`task_group_id`,`type`,`status`,`user_ids`,`user_names`,
    		`start_time`,`end_time`,`schedule`,`schedule_cycle`,`create_time`,`update_time`,`data_status`,`delay_reason`
		from task
		WHERE 1=1 AND data_status = 0
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
		<if test="status != null and status.trim() != ''">
			AND status =#{status}
		</if>
		<if test="userId != null">
			AND #{userId} = user_ids
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(1) from task
		WHERE 1=1 AND data_status = 0
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.task.TaskEntity" useGeneratedKeys="true" keyProperty="id">
		insert into task(
			`task_group_id`,
			`name`,
			`remark`,
			`type`,
			`status`,
			`user_ids`,
			`user_names`,
			`start_time`,
			`end_time`,
			`schedule`,
			`schedule_cycle`,
			`create_time`,
			`update_time`,
			`data_status`,
			`delay_reason`)
		values(
			#{taskGroupId},
			#{name},
			#{remark},
			#{type},
			#{status},
			#{userIds},
			#{userNames},
			#{startTime},
			#{endTime},
			#{schedule},
			#{scheduleCycle},
			#{createTime},
			#{updateTime},
			#{dataStatus},
			#{delay_reason})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.task.TaskEntity">
		update task 
		<set>
			<if test="taskGroupId != null">`task_group_id` = #{taskGroupId}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="userIds != null">`user_ids` = #{userIds}, </if>
			<if test="userNames != null">`user_names` = #{userNames}, </if>
			<if test="startTime != null">`start_time` = #{startTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime}, </if>
			<if test="schedule != null">`schedule` = #{schedule}, </if>
			<if test="scheduleCycle != null">`schedule_cycle` = #{scheduleCycle}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="dataStatus != null">`data_status` = #{dataStatus}</if>
			<if test="delayReason != null and delayReason!= ''">`delay_reason` = #{delayReason}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from task where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from task where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<!-- 获取任务下物品进度 -->
	<select id="selectTaskProgressRate" parameterType="java.lang.Integer" resultType="com.platform.entity.task.vo.TaskStatisticsVo">
		SELECT SUM(r.id) AS total,SUM(r.material_status =1) AS finish
		FROM (
			SELECT m.id,mt.name AS material_type,m.material_status
		 	FROM task t
			LEFT JOIN task_group_material tgm ON t.task_group_id = tgm.task_group_id
			LEFT JOIN material m ON m.id = tgm.material_id
			LEFT JOIN material_type mt ON mt.id = m.material_type_id
			WHERE t.id = #{taskId}
		) r
		GROUP BY r.material_status
	</select>

</mapper>