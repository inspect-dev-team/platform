<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.specific.CheckSpecificDao">

    <resultMap type="com.platform.entity.specific.CheckSpecificEntity" id="checkSpecificMap">
        <result property="id" column="id"/>
        <result property="specificName" column="specific_name"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="creator" column="creator"/>
		<result property="creatorId" column="creator_id"/>
        <result property="updateTime" column="update_time"/>
        <result property="updator" column="updator"/>
		<result property="updatorId" column="updator_id"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.specific.CheckSpecificEntity">
		select
			`id`,
			`specific_name`,
			`remark`,
			`create_time`,
			`creator_id`,
			`creator`,
			`update_time`,
			`updator`,
			`updator_id`
		from check_specific
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.specific.CheckSpecificEntity">
		select
    		`id`,
    		`specific_name`,
    		`remark`,
    		`create_time`,
			`creator_id`,
			`creator`,
			`update_time`,
			`updator`,
			`updator_id`
		from check_specific
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<!-- 查询所有检查规范，下拉选择列表 -->
	<select id="queryAllCheckSpecific" resultType="com.platform.entity.vo.CheckSpecificVo">
		SELECT `id`, `specific_name` AS name FROM check_specific ORDER BY id
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from check_specific
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.specific.CheckSpecificEntity" useGeneratedKeys="true" keyProperty="id">
		insert into check_specific(
			`specific_name`,
			`remark`,
			`create_time`,
			`creator_id`,
			`creator`,
			`update_time`,
			`updator_id`,
			`updator`)
		values(
			#{specificName},
			#{remark},
			#{createTime},
			#{creatorId},
			#{creator},
			#{updateTime},
			#{updatorId},
			#{updator})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.specific.CheckSpecificEntity">
		update check_specific 
		<set>
			<if test="specificName != null">`specific_name` = #{specificName}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="creatorId != null">`creator_id` = #{creatorId}, </if>
			<if test="creator != null">`creator` = #{creator}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="updatorId != null">`updator_id` = #{updatorId},</if>
			<if test="updator != null">`updator` = #{updator}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from check_specific where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from check_specific where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>