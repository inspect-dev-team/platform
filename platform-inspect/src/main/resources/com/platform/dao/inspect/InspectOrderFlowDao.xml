<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.inspect.InspectOrderFlowDao">

    <resultMap type="com.platform.entity.inspect.InspectOrderFlowEntity" id="inspectOrderFlowMap">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="type" column="type"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="createTime" column="create_time"/>
        <result property="descr" column="descr"/>
		<result property="photos" column="photos"/>
		<result property="chiefIds" column="chief_ids"/>
		<result property="chiefNames" column="chief_names"/>
        <result property="dataStatus" column="data_status"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.inspect.InspectOrderFlowEntity">
		select `id`,`order_id`,`type`,`user_id`,`user_name`,`create_time`,`descr`,`photos`,chief_ids,chief_names,`data_status`
		from inspect_order_flow
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.inspect.InspectOrderFlowEntity">
		SELECT `id`,`order_id`,`type`,`user_id`,`user_name`,`create_time`,`descr`,`photos`,chief_ids,chief_names,`data_status`
		FROM inspect_order_flow
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
		<if test="orderId != null">
			AND `order_id` = #{orderId}
		</if>
		<if test="userId != null">
			AND FIND_IN_SET(#{userId},chief_ids)
		</if>
		<if test="type != null">
			AND type = #{type}
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<!-- 查询异常历史记录 -->
	<select id="queryAnomalyList" resultType="com.platform.entity.inspect.vo.AnomalyFlowVo">
	SELECT `user_name` AS userName,`create_time` AS createTime,`descr` AS descr,photos
	FROM inspect_order_flow
	WHERE order_id = #{orderId}
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(1) from inspect_order_flow
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
		<if test="orderId != null">
			AND `order_id` = #{orderId}
		</if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.inspect.InspectOrderFlowEntity" useGeneratedKeys="true" keyProperty="id">
		insert into inspect_order_flow(
			`order_id`,
			`type`,
			`user_id`,
			`user_name`,
			`create_time`,
			`descr`,
			`photos`,
			chief_ids,
			 chief_names,
			`data_status`)
		values(
			#{orderId},
			#{type},
			#{userId},
			#{userName},
			#{createTime},
			#{descr},
			#{photos},
			#{chiefIds},
			#{chiefNames},
			#{dataStatus})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.inspect.InspectOrderFlowEntity">
		update inspect_order_flow 
		<set>
			<if test="orderId != null">`order_id` = #{orderId}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="userName != null">`user_name` = #{userName}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="descr != null">`descr` = #{descr}, </if>
			<if test="photos != null">`descr` = #{photos}, </if>
			<if test="chiefIds != null">`chief_ids` = #{chiefIds}, </if>
			<if test="chiefNames != null">`chief_names` = #{chiefNames}, </if>
			<if test="dataStatus != null">`data_status` = #{dataStatus}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from inspect_order_flow where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from inspect_order_flow where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>